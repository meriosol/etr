Project: Event tracker
Inception: [2014-01-13] 
Goal: Based on sample of event logging entity show how different combinations of industry popular
      frameworks(frmk-s)/approaches can be used to handle this basic entity CRUD in different DBs.
Project short names: ETR, etr

For detailed doc please see doc/html/index.html 
	  
1. High level overview
For 1st iterations some of these combinations will be tried:
  (lang: Java SE v7) (frmk: JDBC v4+ | JPA v2+ | Spring v4+ | Hibernate v4+ | Mybatis v3+) 
  (DB: SQL: (derby v10+ | mysql v5+| pgsql v9+)) (config: XML | Annotations).

2. Design
Main classes to play around:
  Event(id: long, category: EventCategory, severityLevel: enum(INFO/WARN/ERROR,FATAL)
        , source: string, processId: string, title: short_string, created: date_time).
  EventCategory(code: string, name: string). 

Tables resemble these classes.  
NOTE: large size field will be added in next iterations, be aware..

3. Folders overview
 3.1. configs: Backend configs.  
       - sql_db_samples: has OS command samples, DDL/DML scripts for managing sample DBs and ETR tables.
 3.2. docs: Project docs. Dir docs/html has mini site explaining different aspects of case studies for ETR.
 3.3. models: System/DB Design models. UML and ERD are main contenders. 
              For UML 'WhiteStar UML' free app is used for now.
 3.4. projects: Case studies grouped by technologies used. They are generally have maven root poms, can be opened in e.g. IDEA IDE.
                They, in turn, have deep dir structures to show usage combinations. Hope you don't get lost :)..  
      - java_se7_sql: For SQL DBs, using Java SE 7.
 3.5. runtimes: DB runtime launch samples
       - javadb: JavaDB(apache derby) runtime folder. Both windows and linux env-s are embraced. 
	 Env specific folders can be copied somewhere outside this code tree and used as foundation for sample database (eventium).
 
4. Build/test  
Tests to be performed this way:
 1. Select subproject(maven module) dependency towards desired combination.
 2. Select particular DB configuration (and make sure that DB is running and in good shape).
 3. Perform tests.
 
5. Disclaimer
Project is in status "pet, for play around", can be removed from VCS at any time without warning.

6. Version history
----------
0.0.1.SNAPSHOT | 2014-01-14
 - Inception. UML model and HTML docs added.
0.0.2.SNAPSHOT | 2014-01-15
 - Folder 'configs' added. All SQL scripts were tested on win7 env, tables created.
0.0.1.RELEASE | 2014-01-22
 - Mocked and JDBC approaches were finished. Performance tracker was added.
----------
