<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.meriosol</groupId>
	<artifactId>etr-jse7-sql</artifactId>
	<version>0.0.3-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>ETR for Java SE7</name>
	<description>Event tracker / JavaSE7 edition for SQL DBs. 
	For now derby,mysql,pgsql are embraced.
	From frmk-s prospective 'native se' jdbc, 'JEE' jpa, hibernate, mybatis
	, spring and their combinations are tried out.
    For now it's assumed no JEE	container will be used for testing, but who knows about next iterations..
	</description>
	<inceptionYear>2014</inceptionYear>
    <!--
	<licenses></licenses>
	<organization>MerioSol</organization>
	<developers>MerioSol</developers>
	<contributors>MerioSol</contributors>
	-->
    <properties>
        <!-- TODO: extract to properties file -->
        <!-- Skip artifact deployment -->
        <maven.deploy.skip>true</maven.deploy.skip>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Dep-s lib versions: -->
        <org.slf4j.version>1.7.5</org.slf4j.version>
        <log4j.version>1.2.17</log4j.version>
        <junit.version>4.11</junit.version>
        <mysql.version>5.1.27</mysql.version>
        <postgresql.version>9.1-901.jdbc4</postgresql.version>
        <derbyclient.version>10.8.3.0</derbyclient.version>
    </properties>

    <modules>
        <module>commons</module>
        <module>api</module>
        <module>apistudy</module>
        <module>approaches/mocked</module>
        <module>approaches/jdbc</module>
        <module>approaches/mybatis/xml</module>
        <module>approaches/mybatis/annot</module>
        <module>approaches/mybatis/spring/annot</module>
        <module>approaches/spring/templates</module>
		<module>approaches/hibernate/xml</module>
		<module>approaches/hibernate/spring/xml</module>
		<module>approaches/hibernate/spring/annot</module>
		<module>approaches/hibernate/spring/jpa/annot</module>
	</modules>

    <scm>
        <url>scm:git:git@github.com:meriosol/etr.git</url>
        <connection>scm:git:git@github.com:meriosol/etr.git</connection>
        <tag>HEAD</tag>
    </scm>

	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j.version}</version>
		</dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${org.slf4j.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${org.slf4j.version}</version>
            <scope>runtime</scope>
        </dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
			<scope>runtime</scope>
            <exclusions>
                <exclusion>
                    <groupId>javax.jms</groupId>
                    <artifactId>jms</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jdmk</groupId>
                    <artifactId>jmxtools</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jmx</groupId>
                    <artifactId>jmxri</artifactId>
                </exclusion>
            </exclusions>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Sample databases. -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbyclient</artifactId>
			<version>${derbyclient.version}</version>
			<scope>runtime</scope>
		</dependency>

	</dependencies>

	<build>
		<testResources>
			<testResource>
				<filtering>false</filtering>
				<directory>src/test/java</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
